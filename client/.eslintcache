[{"D:\\nodeportpolio\\react.js_express_mysql_infinitScroll_board\\client\\src\\views\\App.js":"1","D:\\nodeportpolio\\react.js_express_mysql_infinitScroll_board\\client\\src\\reportWebVitals.js":"2","D:\\nodeportpolio\\react.js_express_mysql_infinitScroll_board\\client\\src\\views\\components\\Customer\\CustomerDelete.js":"3","D:\\nodeportpolio\\react.js_express_mysql_infinitScroll_board\\client\\src\\views\\components\\Customer\\CustomerAdd.js":"4","D:\\nodeportpolio\\react.js_express_mysql_infinitScroll_board\\client\\src\\views\\components\\Customer\\Customer.js":"5","D:\\nodeportpolio\\react.js_express_mysql_infinitScroll_board\\client\\src\\views\\components\\Customer\\CustomerCRUD.js":"6","D:\\nodeportpolio\\react.js_express_mysql_infinitScroll_board\\client\\src\\views\\components\\main\\LandingPage.js":"7","D:\\nodeportpolio\\react.js_express_mysql_infinitScroll_board\\client\\src\\index.js":"8","D:\\nodeportpolio\\react.js_express_mysql_infinitScroll_board\\client\\src\\enum.js":"9","D:\\nodeportpolio\\react.js_express_mysql_infinitScroll_board\\client\\src\\views\\components\\main\\NoticeContent.js":"10","D:\\nodeportpolio\\react.js_express_mysql_infinitScroll_board\\client\\src\\views\\components\\main\\Ad.js":"11","D:\\nodeportpolio\\react.js_express_mysql_infinitScroll_board\\client\\src\\views\\components\\main\\modal\\Modal.js":"12","D:\\nodeportpolio\\react.js_express_mysql_infinitScroll_board\\client\\src\\ApiInstance\\apis.js":"13","D:\\nodeportpolio\\react.js_express_mysql_infinitScroll_board\\client\\src\\views\\components\\main\\Content.js":"14"},{"size":632,"mtime":1620492158989,"results":"15","hashOfConfig":"16"},{"size":375,"mtime":1620187353915,"results":"17","hashOfConfig":"16"},{"size":1824,"mtime":1620187353917,"results":"18","hashOfConfig":"16"},{"size":4758,"mtime":1620187353917,"results":"19","hashOfConfig":"16"},{"size":810,"mtime":1620187353916,"results":"20","hashOfConfig":"16"},{"size":5958,"mtime":1620455856161,"results":"21","hashOfConfig":"16"},{"size":10054,"mtime":1620567934540,"results":"22","hashOfConfig":"16"},{"size":502,"mtime":1620560897981,"results":"23","hashOfConfig":"16"},{"size":144,"mtime":1620187353915,"results":"24","hashOfConfig":"16"},{"size":1176,"mtime":1620565618769,"results":"25","hashOfConfig":"16"},{"size":872,"mtime":1620495468527,"results":"26","hashOfConfig":"16"},{"size":6094,"mtime":1620568024262,"results":"27","hashOfConfig":"16"},{"size":196,"mtime":1620456529926,"results":"28","hashOfConfig":"16"},{"size":3530,"mtime":1620566567775,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"33"},"tjywsm",{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65"},"D:\\nodeportpolio\\react.js_express_mysql_infinitScroll_board\\client\\src\\views\\App.js",["66"],"import React,{ Suspense} from 'react';\r\nimport {BrowserRouter as Router, Switch, Route} from'react-router-dom'\r\nimport CustomerCRUD from'./components/Customer/CustomerCRUD'\r\nimport LandingPage from './components/main/LandingPage';\r\nimport Content from './components/main/Content';\r\n\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    \r\n      <Router>\r\n        <Switch>\r\n          <Route exact path=\"/\"  component={LandingPage}/>\r\n          <Route exact path=\"/content/:id\"  component={Content}/>\r\n          <Route exact path=\"/board\"  component={CustomerCRUD}/>\r\n        </Switch>\r\n      </Router>\r\n   \r\n    \r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n",["67","68"],"D:\\nodeportpolio\\react.js_express_mysql_infinitScroll_board\\client\\src\\reportWebVitals.js",[],["69","70"],"D:\\nodeportpolio\\react.js_express_mysql_infinitScroll_board\\client\\src\\views\\components\\Customer\\CustomerDelete.js",[],"D:\\nodeportpolio\\react.js_express_mysql_infinitScroll_board\\client\\src\\views\\components\\Customer\\CustomerAdd.js",[],"D:\\nodeportpolio\\react.js_express_mysql_infinitScroll_board\\client\\src\\views\\components\\Customer\\Customer.js",["71"],"import React from 'react'\r\nimport TableRow from '@material-ui/core/TableRow'\r\nimport TableCell from '@material-ui/core/TableCell'\r\nimport CustomerDelete from'./CustomerDelete'\r\n\r\n\r\n\r\nfunction Customer(props) {\r\n\r\n    \r\n    return (\r\n       <TableRow>\r\n           <TableCell>{props.number}</TableCell>\r\n           <TableCell>{props.id}</TableCell>\r\n           <TableCell><img style={{width:'50px', height:'50px'}} src={props.img}/></TableCell>\r\n           <TableCell>{props.gender}</TableCell>\r\n           <TableCell>{props.name}</TableCell>\r\n           <TableCell>{props.birthday}</TableCell>\r\n           <TableCell>{props.job}</TableCell>\r\n           <TableCell><CustomerDelete  reset={props.reset} setReset={props.setReset} id={props.id}/></TableCell>\r\n       </TableRow>\r\n    )\r\n}\r\n\r\nexport default Customer","D:\\nodeportpolio\\react.js_express_mysql_infinitScroll_board\\client\\src\\views\\components\\Customer\\CustomerCRUD.js",["72","73","74","75"],"import React,{ Suspense, useEffect, useState } from 'react';\r\nimport Customer from './Customer'\r\nimport CustomerAdd from'./CustomerAdd'\r\nimport Table from'@material-ui/core/Table'\r\nimport TableHead from'@material-ui/core/TableHead'\r\nimport TableCell from '@material-ui/core/TableCell'\r\nimport TableRow from '@material-ui/core/TableRow'\r\nimport TableBody from'@material-ui/core/TableBody'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport {makeStyles} from '@material-ui/core/styles'\r\nimport CircularProgress from'@material-ui/core/CircularProgress'\r\nimport axios from'axios'\r\nimport { withRouter } from 'react-router-dom';\r\nimport url from'../../../enum'\r\n\r\nconst useStyle=makeStyles({\r\n  root:{\r\n    with :\"100%\",\r\n    marginTop : \"150px\",\r\n    overflowX:\"auto\"\r\n  },\r\n  table:{\r\n    minWidth:\"1080px\"\r\n  },\r\n  progress:{\r\n    marginTop:\"20px\"\r\n   \r\n  }\r\n})\r\n\r\nfunction CustomerCRUD(props) {\r\n\r\n  const [completed,setCompleted]=useState({progress:0})\r\n  const [customer,setCustomer]=useState([])\r\n  const [reset,setReset]=useState(true)\r\n  const [paging,setPaging]=useState({cnt:0,pageCount:0,start:0,number:0,startPage:0,endPage:0})\r\n  const [currentPage,setCurrentPage]=useState(1)\r\n  const [pageBlock,setPageBlock]=useState([])\r\n\r\n  const progressFunc =()=>{\r\n    if(completed.progress<=100){\r\n        completed.progress=parseInt(completed.progress+1)\r\n    }else{\r\n        completed.progress=1\r\n    }\r\n    setCompleted({progress:completed.progress})\r\n  }\r\n  \r\n\r\n  useEffect( async () => {\r\n    var inter=setInterval(() => {\r\n      progressFunc()\r\n    }, 150);\r\n   \r\n      await axios.get(url+'api/customers/customerBoard',{params:{currentPage:currentPage}})\r\n      .then(res=>{\r\n        //개시물 정보 가져오기\r\n        setCustomer(res.data.list)\r\n        delete res.data.list\r\n        setPaging(res.data)\r\n        //페이징 처리정보 setting\r\n        paging.cnt=res.data.cnt\r\n        paging.pageCount=res.data.pageCount\r\n        paging.start=res.data.start\r\n        paging.number=res.data.number\r\n        paging.startPage=res.data.startPage\r\n        paging.endPage=res.data.endPage\r\n        console.log(paging)\r\n        console.log(currentPage)\r\n        console.log(\"페이징!\")\r\n      })\r\n      .catch(err=>console.log(err))\r\n  \r\n \r\n    completed.progress=0\r\n    clearInterval(inter)\r\n    console.log(\"시작\"+paging.startPage)\r\n    console.log(\"끝\"+paging.endPage)\r\n    \r\n    pageBlock.length=0\r\n\r\n    let pageArray=[]\r\n    for(let i=paging.startPage; i<=paging.endPage; i++){\r\n        pageArray.push(i)\r\n        console.log(\"페이징\"+i)\r\n      }\r\n    console.log(pageArray)\r\n    setPageBlock([...pageBlock,...pageArray])\r\n    \r\n  }, [reset,currentPage])\r\n\r\n  const pageHandler=(where,pageNum)=>{\r\n      if(where==='first'){\r\n        setCurrentPage(1)\r\n      }else if(where==='last'){\r\n         setCurrentPage(paging.pageCount) \r\n      }else if(where==='plusOneStep'){\r\n        currentPage>1?setCurrentPage(currentPage-1):setCurrentPage(currentPage)\r\n      }else if(where==='minusOneStep'){\r\n        currentPage===paging.pageCount?setCurrentPage(currentPage):setCurrentPage(currentPage+1)\r\n      }else if(where==='switchPage'){\r\n        setCurrentPage(pageNum)\r\n      }\r\n\r\n      \r\n   \r\n  }\r\n  \r\n\r\n\r\n  const classes =useStyle();\r\n  return (\r\n    <Suspense fallback={(<div>loading....</div>)}>\r\n      <Paper className={classes.root}>\r\n        <Table className={classes.table}>\r\n          <TableHead>\r\n              <TableRow>\r\n                <TableCell>번호</TableCell>\r\n                <TableCell>아이디</TableCell>\r\n                <TableCell>이미지</TableCell>\r\n                <TableCell>성별</TableCell>\r\n                <TableCell>이름</TableCell>\r\n                <TableCell>생일</TableCell>\r\n                <TableCell>직업</TableCell>\r\n                <TableCell>기능</TableCell>\r\n              </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {paging.cnt>0?customer.map((value,index)=>\r\n            <>\r\n                <Customer key={index} number={paging.number-index}\r\n                          id={value.id} name={value.name}\r\n                          img={value.image} birthday={value.birthday}\r\n                          gender={value.gender} job={value.job}\r\n                          reset={reset} setReset={setReset}\r\n                          />\r\n                          {value.image}\r\n             </>             \r\n            ):\"list가 없습니다.\"}\r\n            \r\n            <TableRow>\r\n              <TableCell colSpan=\"6\" align=\"center\">\r\n                  <CircularProgress className={classes.progress} variant=\"determinate\" value={completed.progress}/>\r\n              </TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n                <TableCell>\r\n                    <p onClick={()=>pageHandler('first')}>처음으로</p>\r\n                </TableCell>\r\n                <TableCell>\r\n                    <p onClick={()=>pageHandler('plusOneStep')}>{'<'}</p>\r\n                </TableCell>\r\n                <TableCell>\r\n                  {pageBlock.map((value,index)=>{\r\n                    return value!==currentPage?<a key={index} onClick={()=>pageHandler('switchPage',value)} >[{value}]</a>:<a  onClick={()=>pageHandler('switchPage',value)} key={index} style={{fontSize:'25px'}}>[{value}]</a>\r\n                  })}\r\n                </TableCell>\r\n                <TableCell>\r\n                    <p onClick={()=>pageHandler('minusOneStep')}>{'>'}</p>\r\n                </TableCell>\r\n                <TableCell>\r\n                    <p onClick={()=>pageHandler('last')}>마지막으로</p>\r\n                </TableCell>\r\n            </TableRow>\r\n          </TableBody>\r\n        </Table>\r\n      </Paper>\r\n      <div style={{display:'flex',flexDirection:'column', alignItems:'center',width:'100%'}} >\r\n        <CustomerAdd reset={reset} setReset={setReset}/>\r\n      </div>\r\n    </Suspense>\r\n   \r\n  );\r\n}\r\n\r\nexport default withRouter(CustomerCRUD);\r\n","D:\\nodeportpolio\\react.js_express_mysql_infinitScroll_board\\client\\src\\views\\components\\main\\LandingPage.js",["76","77","78"],"D:\\nodeportpolio\\react.js_express_mysql_infinitScroll_board\\client\\src\\index.js",[],"D:\\nodeportpolio\\react.js_express_mysql_infinitScroll_board\\client\\src\\enum.js",[],"D:\\nodeportpolio\\react.js_express_mysql_infinitScroll_board\\client\\src\\views\\components\\main\\NoticeContent.js",["79"],"import React from 'react'\r\nimport '../../CSSS/cc.css'\r\n\r\nfunction NoticeContent(props) {\r\n    const {category_id,contents,created_at,id,title,updated_at,user_id,page}=props\r\n    const goToContent =()=>{\r\n        props.history.push(`/content/${id}`)\r\n    }\r\n    return (\r\n        <div onClick={goToContent} className=\"postingContainer\">\r\n            <div className=\"categoryName\">\r\n                <p>\r\n                {category_id===1?'apple':category_id===2?'banana':category_id===3&&'coconut'}\r\n                </p>\r\n                <p>\r\n                {id}번\r\n                </p>\r\n            </div>\r\n            <div className=\"postingDate\">\r\n                <div className=\"userId\">\r\n                    {user_id}\r\n                    {page}\r\n                </div>\r\n                <div className=\"createDate\">\r\n                        created_at({created_at.split('T')[0]})\r\n                </div>\r\n            </div>\r\n            <div className=\"title nodrag\">\r\n                {title}\r\n            </div>\r\n            <div className=\"noitceContent nodrag\">\r\n                {contents}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NoticeContent\r\n","D:\\nodeportpolio\\react.js_express_mysql_infinitScroll_board\\client\\src\\views\\components\\main\\Ad.js",["80","81","82","83"],"import React from 'react'\r\nimport '../../CSSS/cc.css'\r\nfunction Ad(props) {\r\n\r\n    const {contents,created_at,id,img,title,updated_at}=props\r\n\r\n    return (\r\n        <div className=\"adcontainer\">\r\n            <div className=\"sponserd\">\r\n                sponserd\r\n            </div>\r\n            <div className=\"adcontent\">\r\n                <div className=\"imgContainer\">\r\n                    <img className=\"img\" src={`https://cdn.comento.kr/assignment/${img}`} />\r\n                </div>\r\n                \r\n                <div className=\"adcontentContainer\">\r\n                    <div className=\"adtitle\">\r\n                    {title}\r\n                    </div>\r\n                    <div className=\"adSub\">\r\n                        {contents}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Ad\r\n\r\n\r\n","D:\\nodeportpolio\\react.js_express_mysql_infinitScroll_board\\client\\src\\views\\components\\main\\modal\\Modal.js",["84","85","86"],"D:\\nodeportpolio\\react.js_express_mysql_infinitScroll_board\\client\\src\\ApiInstance\\apis.js",[],"D:\\nodeportpolio\\react.js_express_mysql_infinitScroll_board\\client\\src\\views\\components\\main\\Content.js",["87"],"import React,{ useState,useEffect} from 'react'\r\nimport { api } from '../../../ApiInstance/apis'\r\nimport '../../CSSS/content.css'\r\n\r\n\r\nfunction Content(props) {\r\n    \r\n    \r\n    const id =props.match.params.id\r\n    const [data,setData]=useState(\"\")\r\n    useEffect(() => {\r\n        api.get('/view',{\r\n            params:{\r\n                id:id\r\n            }\r\n        }).then(res=>{\r\n            \r\n            setData(res.data.data)\r\n        })\r\n    }, [])\r\n    \r\n    const copy =(where)=>{\r\n        \r\n            let text=document.getElementById(where).textContent\r\n            \r\n            navigator.clipboard.writeText(text).then(res=>{\r\n                alert('글을 복사했습니다.!')\r\n            })\r\n        \r\n    }\r\n    return (\r\n        <>\r\n      \r\n        <div  className=\"conTentcontainer\" >\r\n            \r\n            <div className=\"conTentlabel\">\r\n                [2021-05-10]윤재진\r\n            </div>\r\n            <div className=\"conTentcontent\" >\r\n               \r\n                <div  className=\"conTentboard\">\r\n                   \r\n                   \r\n                   <div  className=\"conTentpostingContainer\">\r\n                        <div className=\"conTentTitleName nodrag\">\r\n                            {data.title}\r\n                        </div>\r\n                        <div id=\"content\" className=\"conTentnoitceContent nodrag\">\r\n                            {data.contents}\r\n                        </div>\r\n                        <div className=\"conTentdate\">\r\n                           create_at({data.created_at?.split('T')[0]})\r\n                           <div onClick={()=>copy('content')} >\r\n                                글복사\r\n                            </div>\r\n                        </div>\r\n                    </div>    \r\n                    <div className=\"conTentreply\">\r\n                        <div>\r\n                            답번\r\n                        </div> \r\n                         <div className=\"number\">\r\n                            {data.reply?.length}\r\n                        </div>  \r\n                        \r\n                    </div>     \r\n                    \r\n                        {\r\n                            data.reply?.map((value,index)=>{\r\n                                return(\r\n                                    <div key={value.contents}  className=\"conTentReplyContainer\">\r\n                                        <div className=\"reply_user_name\">\r\n                                            {value.user.name}\r\n                                        </div>\r\n                                        <div id=\"reply\" className=\"replyContent\">\r\n                                            {value.contents}\r\n                                        </div>\r\n                                        <div className=\"date\">\r\n                                            {value.created_at.split('T')[0]}\r\n                                            <div onClick={()=>copy('reply')}>\r\n                                                글복사\r\n                                            </div>\r\n                                                \r\n                                        </div>                    \r\n\r\n                                    </div>  \r\n                                )\r\n                            })\r\n                        }\r\n\r\n                   \r\n                   \r\n                </div>\r\n\r\n            \r\n            </div>\r\n        </div>\r\n        </>\r\n        \r\n    )\r\n}\r\n\r\nexport default Content\r\n\r\n",{"ruleId":"88","severity":1,"message":"89","line":1,"column":16,"nodeType":"90","messageId":"91","endLine":1,"endColumn":24},{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","replacedBy":"95"},{"ruleId":"92","replacedBy":"96"},{"ruleId":"94","replacedBy":"97"},{"ruleId":"98","severity":1,"message":"99","line":15,"column":23,"nodeType":"100","endLine":15,"endColumn":83},{"ruleId":"101","severity":1,"message":"102","line":50,"column":14,"nodeType":"103","endLine":90,"endColumn":4},{"ruleId":"101","severity":1,"message":"104","line":90,"column":6,"nodeType":"105","endLine":90,"endColumn":25,"suggestions":"106"},{"ruleId":"107","severity":1,"message":"108","line":155,"column":48,"nodeType":"100","endLine":155,"endColumn":110},{"ruleId":"107","severity":1,"message":"108","line":155,"column":124,"nodeType":"100","endLine":155,"endColumn":212},{"ruleId":"101","severity":1,"message":"109","line":35,"column":9,"nodeType":"110","endLine":35,"endColumn":40},{"ruleId":"101","severity":1,"message":"111","line":84,"column":8,"nodeType":"105","endLine":84,"endColumn":14,"suggestions":"112"},{"ruleId":"101","severity":1,"message":"109","line":91,"column":9,"nodeType":"110","endLine":91,"endColumn":41},{"ruleId":"88","severity":1,"message":"113","line":5,"column":53,"nodeType":"90","messageId":"91","endLine":5,"endColumn":63},{"ruleId":"88","severity":1,"message":"114","line":5,"column":21,"nodeType":"90","messageId":"91","endLine":5,"endColumn":31},{"ruleId":"88","severity":1,"message":"115","line":5,"column":32,"nodeType":"90","messageId":"91","endLine":5,"endColumn":34},{"ruleId":"88","severity":1,"message":"113","line":5,"column":45,"nodeType":"90","messageId":"91","endLine":5,"endColumn":55},{"ruleId":"98","severity":1,"message":"99","line":14,"column":21,"nodeType":"100","endLine":14,"endColumn":93},{"ruleId":"88","severity":1,"message":"116","line":8,"column":47,"nodeType":"90","messageId":"91","endLine":8,"endColumn":54},{"ruleId":"101","severity":1,"message":"117","line":43,"column":8,"nodeType":"105","endLine":43,"endColumn":40,"suggestions":"118"},{"ruleId":"101","severity":1,"message":"109","line":43,"column":9,"nodeType":"110","endLine":43,"endColumn":39},{"ruleId":"101","severity":1,"message":"119","line":20,"column":8,"nodeType":"105","endLine":20,"endColumn":10,"suggestions":"120"},"no-unused-vars","'Suspense' is defined but never used.","Identifier","unusedVar","no-native-reassign",["121"],"no-negated-in-lhs",["122"],["121"],["122"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has missing dependencies: 'completed', 'pageBlock', 'paging', and 'progressFunc'. Either include them or remove the dependency array. You can also do a functional update 'setPageBlock(p => ...)' if you only need 'pageBlock' in the 'setPageBlock' call.","ArrayExpression",["123"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","CallExpression","React Hook useEffect has missing dependencies: 'notices', 'perPage', 'sort', and 'sortsetting'. Either include them or remove the dependency array. You can also do a functional update 'setNotices(n => ...)' if you only need 'notices' in the 'setNotices' call.",["124"],"'updated_at' is assigned a value but never used.","'created_at' is assigned a value but never used.","'id' is assigned a value but never used.","'addShow' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'setAddshow'. Either include it or remove the dependency array.",["125"],"React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["126"],"no-global-assign","no-unsafe-negation",{"desc":"127","fix":"128"},{"desc":"129","fix":"130"},{"desc":"131","fix":"132"},{"desc":"133","fix":"134"},"Update the dependencies array to be: [reset, currentPage, completed, paging, pageBlock, progressFunc]",{"range":"135","text":"136"},"Update the dependencies array to be: [notices, page, perPage, sort, sortsetting]",{"range":"137","text":"138"},"Update the dependencies array to be: [setAddshow]",{"range":"139","text":"140"},"Update the dependencies array to be: [id]",{"range":"141","text":"142"},[2611,2630],"[reset, currentPage, completed, paging, pageBlock, progressFunc]",[2298,2304],"[notices, page, perPage, sort, sortsetting]",[1272,1304],"[setAddshow]",[453,455],"[id]"]